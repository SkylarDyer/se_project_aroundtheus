!function(){"use strict";class e{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleClickOutside),this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleClickOutside=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}}class t extends e{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}))}close(){this._popupForm.reset(),super.close()}renderLoading(e,t){this._saveButton.textContent=e?"Saving...":t}}var s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent=" ",this._errorMessageEl.classList.remove(this._errorClass)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}enableValidation(){this._form.addEventListener("reset",(()=>{this.toggleButtonState()})),this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class r{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e,t,s,r,i,n,o,a,l,d){this._name=e,this._link=t,this.isLiked=s,this.cardId=i,this._likes=r,this._userId=n,this._cardSelector=d,this._handleCardClick=o,this._handleLikeClick=l,this._handleDeleteClick=a}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._cardDeleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick(this._getData())}))}handleDeleteCard(){this._cardElement.remove()}_renderLikes(){this.isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}updateLikes(e){this.isLiked=e,this._renderLikes()}_showCardLikes(){this._cardLikeCounter.textContent=this._likes.length,this.cardIsLiked()?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_getData(){return{name:this._name,link:this._link}}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardLikeCounter=this._cardElement.querySelector(".card__counter"),this._cardLikeCounter.textContent=this._cardLikesCount,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__error",errorClass:"modal__error_visible"},o=document.querySelector("#add-card-form"),a=document.querySelector("#edit-profile-form"),l=document.querySelector("#change-avi-form"),d=(document.querySelector(".cards__list"),document.querySelector("#owner-name")),c=document.querySelector("#owner-description"),h=(l.querySelector(".change-avi-form__button"),document.querySelector("#profile-avi__image-hover-button")),_=document.querySelector(".profile__add-button"),u=new t("#change-avi-img",(function(e){u.renderLoading(!0),U.updateProfileAvatar(e.avatar).then((()=>{g.setAvatar(e.avatar),u.close()})).catch((e=>{console.log(e)})).finally((()=>{u.renderLoading(!1,"Save")}))})),m=document.querySelector(".profile__edit-button"),p=new class extends e{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__button")}setSubmitAction(e){this._handleConfirm=e}renderLoading(e){this._saveButton.textContent=e?"Loading...":"Yes"}_handleSubmit=e=>{e.preventDefault(),this._handleConfirm()};setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}}("#modal__delete"),v=new class extends e{constructor(e){super({popupSelector:e}),this._previewImgTitle=this._popupElement.querySelector(".modal__image-title"),this._previewImgModal=this._popupElement.querySelector(".modal__image-preview")}open(e){super.open(),this._previewImgModal.src=e.link,this._previewImgModal.alt=e.name,this._previewImgTitle.textContent=e.name}}("#modal-preview",I),L=new t("#profile-edit-modal",(function(e){L.renderLoading(!0),U.updateProfileInfo(e).then((()=>{g.setUserInfo(e),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderLoading(!1,"Save")}))})),E=new t("#card-edit-modal",(function(e){E.renderLoading(!0),U.addNewCard(e).then((e=>{const t=C(e);S.addItem(t),E.close()})).catch((e=>{console.log(e)})).finally((()=>{E.renderLoading(!1,"Create")}))})),k="#card-template",g=new class{constructor(e){this._nameElement=document.querySelector(e.userNameSelector),this._descriptionElement=document.querySelector(e.userDescriptionSelector),this._userAvi=document.querySelector(e.userAvi)}getUserInfo(){return{name:this._nameElement.textContent,about:this._descriptionElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._descriptionElement.textContent=e.about}setAvatar(e){this._userAvi.src=e}}({userNameSelector:".profile__title",userDescriptionSelector:".profile__description",userAvi:".profile__image"});let S,f;function C(e){return new i(e.name,e.link,e.isLiked,e.likes,e._id,f,I,b,y,k).getView()}function b(e){p.open(),p.setSubmitAction((()=>{p.renderLoading(!0),U.deleteCard(e.cardId).then((()=>{e.handleDeleteCard(),p.close()})).catch((e=>{console.log(e)})).finally((()=>{p.renderLoading(!1)}))}))}function y(e){e.isLiked?U.removeCardLikes(e.cardId).then((t=>{e.updateLikes(t.isLiked)})).catch((e=>{console.log(e)})):U.addCardLikes(e.cardId).then((t=>{e.updateLikes(t.isLiked)})).catch((e=>{console.log(e)}))}function I(e){v.open(e)}const q=new s(n,l),B=new s(n,a),w=new s(n,o);B.enableValidation(),w.enableValidation(),q.enableValidation(),h.addEventListener("click",(()=>{q.toggleButtonState(),u.open()})),m.addEventListener("click",(()=>{!function(){const e=g.getUserInfo();d.value=e.name,c.value=e.about,L.open()}(),B.resetValidation})),_.addEventListener("click",(()=>{w.resetValidation,w.toggleButtonState(),E.open()})),v.setEventListeners(),L.setEventListeners(),p.setEventListeners(),E.setEventListeners(),u.setEventListeners();const U=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addCardLikes(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeCardLikes(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8d1c8a4d-d591-4303-89c5-4b1506b830b3","Content-Type":"application/json"}});Promise.all([U.getUserInfo(),U.getInitialCards()]).then((e=>{let[t,s]=e;g.setUserInfo(t),g.setAvatar(t.avatar),f=t._id,S=new r({items:s,renderer:e=>{const t=C(e);S.addItem(t)}},".cards__list"),S.renderItems()})).catch(console.error)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,